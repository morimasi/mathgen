import {
    AllSettings,
    ArithmeticOperation,
    FractionsProblemType,
    FractionsOperation,
    DecimalsProblemType,
    DecimalsOperation,
    PlaceValueProblemType,
    RhythmicProblemType,
    TimeProblemType,
    ShapeType,
    GeometryProblemType,
    MeasurementProblemType,
    MatchingType,
    ComparisonType,
    NumberRecognitionType,
    PatternType,
    ShapeRecognitionType,
    PositionalConceptType,
    IntroMeasurementType,
    SimpleGraphType,
    SimpleGraphTaskType,
} from '../types';

export const initialSettings: AllSettings = {
    arithmetic: {
        gradeLevel: 2,
        operation: ArithmeticOperation.Addition,
        digits1: 2,
        digits2: 2,
        digits3: 2,
        hasThirdNumber: false,
        carryBorrow: 'mixed',
        divisionType: 'mixed',
        format: 'vertical-html',
        representation: 'number',
        problemsPerPage: 20,
        pageCount: 1,
        useWordProblems: false,
        operationCount: 1,
        useVisuals: false,
        topic: '',
        autoFit: false,
        allowNegativeNumbers: false,
    },
    fractions: {
        gradeLevel: 3,
        type: FractionsProblemType.FourOperations,
        operation: FractionsOperation.Addition,
        difficulty: 'easy',
        maxSetSize: 30,
        problemsPerPage: 20,
        pageCount: 1,
        format: 'vertical-html',
        representation: 'number',
        useWordProblems: false,
        operationCount: 1,
        useVisuals: false,
        topic: '',
        useMixedNumbers: true,
        autoFit: false,
    },
    decimals: {
        gradeLevel: 4,
        type: DecimalsProblemType.FourOperations,
        operation: DecimalsOperation.Addition,
        difficulty: 'easy',
        problemsPerPage: 20,
        pageCount: 1,
        format: 'inline',
        representation: 'number',
        useWordProblems: false,
        operationCount: 1,
        useVisuals: false,
        topic: '',
        autoFit: false,
    },
    placeValue: {
        gradeLevel: 2,
        type: PlaceValueProblemType.Identification,
        digits: 3,
        roundingPlace: 'auto',
        problemsPerPage: 20,
        pageCount: 1,
        useWordProblems: false,
        topic: '',
        autoFit: false,
        fromWordsOrder: 'ordered',
        fromWordsFormat: 'inline',
    },
    rhythmicCounting: {
        type: RhythmicProblemType.Pattern,
        step: 2,
        direction: 'forward',
        useMultiplesOnly: false,
        digits: 2,
        patternLength: 5,
        missingCount: 1,
        orderCount: 5,
        beforeCount: 3,
        afterCount: 3,
        problemsPerPage: 20,
        pageCount: 1,
        useWordProblems: false,
        topic: '',
        orderDirection: 'ascending',
        autoFit: false,
    },
    time: {
        gradeLevel: 1,
        type: TimeProblemType.ReadAnalog,
        difficulty: 'easy',
        clockFace: 'full',
        digitalClockDisplay: 'show',
        problemsPerPage: 12,
        pageCount: 1,
        useWordProblems: false,
        topic: '',
        autoFit: false,
    },
    geometry: {
        gradeLevel: 1,
        type: GeometryProblemType.ShapeRecognition,
        shape: ShapeType.Rectangle,
        problemsPerPage: 12,
        pageCount: 1,
        useWordProblems: false,
        autoFit: false,
        topic: '',
    },
    measurement: {
        gradeLevel: 2,
        type: MeasurementProblemType.Mixed,
        difficulty: 'easy',
        problemsPerPage: 20,
        pageCount: 1,
        useWordProblems: false,
        autoFit: false,
        useVisuals: false,
        topic: '',
    },
    wordProblems: {
        topic: 'Dört İşlem',
        gradeLevel: '4',
        problemsPerPage: 5,
        pageCount: 1,
        operationCount: 1,
        customPrompt: '',
        autoFit: false,
        sourceModule: 'none',
        useVisuals: false,
        layout: 'default',
    },
    matchingAndSorting: {
        type: MatchingType.OneToOne,
        theme: 'mixed',
        itemCount: 4,
        difficulty: 'easy',
        problemsPerPage: 4,
        pageCount: 1,
        autoFit: false,
        useWordProblems: false,
        topic: '',
    },
    comparingQuantities: {
        type: ComparisonType.MoreLess,
        theme: 'mixed',
        maxObjectCount: 10,
        problemsPerPage: 8,
        pageCount: 1,
        autoFit: false,
        useWordProblems: false,
        topic: '',
    },
    numberRecognition: {
        type: NumberRecognitionType.CountAndWrite,
        theme: 'mixed',
        numberRange: '1-10',
        problemsPerPage: 6,
        pageCount: 1,
        autoFit: false,
        useWordProblems: false,
        topic: '',
    },
    patterns: {
        type: PatternType.RepeatingAB,
        theme: 'shapes',
        difficulty: 'easy',
        problemsPerPage: 8,
        pageCount: 1,
        autoFit: false,
        useWordProblems: false,
        topic: '',
    },
    basicShapes: {
        type: ShapeRecognitionType.ColorShape,
        shapes: [ShapeType.Circle, ShapeType.Square, ShapeType.Triangle],
        problemsPerPage: 6,
        pageCount: 1,
        autoFit: false,
        useWordProblems: false,
        topic: '',
    },
    positionalConcepts: {
        type: PositionalConceptType.AboveBelow,
        theme: 'mixed',
        itemCount: 3,
        problemsPerPage: 4,
        pageCount: 1,
        autoFit: false,
        useWordProblems: false,
        topic: '',
    },
    introToMeasurement: {
        type: IntroMeasurementType.CompareLength,
        theme: 'mixed',
        difficulty: 'easy',
        problemsPerPage: 8,
        pageCount: 1,
        autoFit: false,
        useWordProblems: false,
        topic: '',
    },
    simpleGraphs: {
        graphType: SimpleGraphType.Pictograph,
        taskType: SimpleGraphTaskType.Create,
        theme: 'fruits',
        categoryCount: 3,
        maxItemCount: 5,
        problemsPerPage: 2,
        pageCount: 1,
        autoFit: false,
        useWordProblems: false,
        topic: '',
    },
     visualAdditionSubtraction: {
        operation: 'addition',
        theme: 'mixed',
        maxNumber: 5,
        problemsPerPage: 4,
        pageCount: 1,
    },
    verbalArithmetic: {
        operation: 'mixed',
        maxResult: 10,
        problemsPerPage: 10,
        pageCount: 1,
    },
    missingNumberPuzzles: {
        operation: 'addition',
        termCount: 2,
        maxResult: 10,
        problemsPerPage: 8,
        pageCount: 1,
    },
    symbolicArithmetic: {
        operation: 'addition',
        theme: 'animals',
        maxNumber: 10,
        problemsPerPage: 6,
        pageCount: 1,
    },
    problemCreation: {
        operation: 'addition',
        difficulty: 'easy',
        theme: 'mixed',
        problemsPerPage: 4,
        pageCount: 1,
        useWordProblems: false, 
        topic: ''
    },
    dyslexia: {
        activeSubModule: 'sound-wizard',
        problemsPerPage: 10, pageCount: 1, autoFit: true,
        soundWizard: { type: 'rhyme', difficulty: 'easy', wordLength: 4 },
        letterDetective: { letterGroup: 'vowels', difficulty: 'easy' },
        readingFluencyCoach: { gradeLevel: '1', topic: 'Hayvanlar' },
        comprehensionExplorer: { gradeLevel: '2', textLength: 'short', questionType: 'main_idea' },
        vocabularyExplorer: { gradeLevel: '2', difficulty: 'easy' },
        visualMaster: { type: 'letter', pair: 'b-d' },
        wordHunter: { focus: 'suffix', difficulty: 'easy' },
        spellingChampion: { category: 'common_errors', difficulty: 'easy' },
        memoryGamer: { type: 'digit_span', sequenceLength: 3 },
        auditoryWriting: { type: 'single_words', difficulty: 'easy' },
        interactiveStory: { genre: 'adventure', gradeLevel: '2' },
        attentionQuestion: { questionType: 'numerical', difficulty: 'easy', numberRange: '1-50' },
        mapReading: { mapType: 'zoo', task: 'find-place' },
    },
    dyscalculia: {
        activeSubModule: 'number-sense',
        problemsPerPage: 10, pageCount: 1, autoFit: true,
        numberSense: { type: 'number-line', maxNumber: 20 },
        arithmeticFluency: { operation: 'addition', difficulty: 'easy' },
        numberGrouping: { maxNumber: 10 },
        problemSolving: { gradeLevel: '1', topic: 'Oyuncaklar' },
        mathLanguage: { type: 'symbol-match' },
        timeMeasurementGeometry: { category: 'time' },
        spatialReasoning: { type: 'pattern-copy' },
        estimationSkills: { type: 'quantity' },
        fractionsDecimalsIntro: { type: 'visual-match' },
        visualNumberRepresentation: { maxNumber: 10, representation: 'dots' },
        visualArithmetic: { operation: 'addition', maxNumber: 10 },
        interactiveStoryDc: { genre: 'market', gradeLevel: '1' },
    },
    dysgraphia: {
        activeSubModule: 'fine-motor-skills',
        problemsPerPage: 10, pageCount: 1, autoFit: true,
        fineMotorSkills: { type: 'line-trace' },
        letterFormation: { letter: 'a', case: 'lower' },
        letterFormRecognition: { targetLetter: 'b', difficulty: 'easy' },
        legibleWriting: { type: 'spacing' },
        pictureSequencing: { storyLength: 3, topic: 'Parkta bir gün' },
        writingSpeed: { duration: 1 },
        sentenceConstruction: { wordCount: 5 },
        punctuation: { type: 'end-of-sentence' },
        writingPlanning: { topic: 'Tatil anılarım' },
        creativeWriting: { promptType: 'story-starter', topic: 'Gizemli bir anahtar' },
        keyboardSkills: { level: 'home-row' },
        interactiveStoryDg: { genre: 'adventure', gradeLevel: '3' },
    },
};
